apiVersion: v1
items:
- apiVersion: v1
  kind: ConfigMap
  data:
    log4j.properties: |
      # Do not change this generated file. Logging can be configured in the corresponding kubernetes/openshift resource.
      log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
      log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
      log4j.appender.CONSOLE.layout.ConversionPattern=%d{ISO8601} %p %m (%c) [%t]%n
      zookeeper.root.logger=INFO
      log4j.rootLogger=${zookeeper.root.logger}, CONSOLE
  metadata:
    labels:
      strimzi.io/cluster: backend-eventstore
      strimzi.io/kind: Kafka
    name: backend-eventstore-zookeeper-config
    namespace: {{ENV.COMMON.NAMESPACE|mandatory}}
- apiVersion: v1
  kind: Secret
  data:
    ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURMVENDQWhXZ0F3SUJBZ0lKQVBZZ0tMOFE0VFk3TUEwR0NTcUdTSWIzRFFFQkN3VUFNQzB4RXpBUkJnTlYKQkFvTUNtbHZMbk4wY21sdGVta3hGakFVQmdOVkJBTU1EV05zZFhOMFpYSXRZMkVnZGpBd0hoY05NVGt3TmpJMApNakF5TXpVMVdoY05NakF3TmpJek1qQXlNelUxV2pBdE1STXdFUVlEVlFRS0RBcHBieTV6ZEhKcGJYcHBNUll3CkZBWURWUVFEREExamJIVnpkR1Z5TFdOaElIWXdNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUIKQ2dLQ0FRRUF0NHo0RVp1NkYrMHl3bXRJTitsY21zUFpwUW52U2lQMllYZnluMVZpZXo0UHU1SllsdkhwQTdzTQpURUhiU0Z4YmFxZFp2dllFU2p5eHdlMHpNVWErK1ZtNCthalVyOUc0U0hXZ3RSMWE3TzRzVHFPM0xrTFBvRXliClY1b0RkNVczYUs2RDc3aHBuNFlid2x3NGFxQnZJS3hIZ2llN29vS01ZVSsxUW9obndFazdiRzhrU1ZWNkVqV3cKNkJ1K3Ixa0tVZk8vWDA1dDdtOHlBR1E4WmJlcENWRnQ4NW9NOHppZlZweTEwdC9BVEk1ZmV1VXc4YnFUbzlBYwpWbXpsWUxFQlVNNFFjSWUvWDFsT0xhWi9RWER0Q0hEK0tJN0lURnowblB3eW95TUQ3QXBDVitnRDdwdEtrSzBZCjI0SnlSSkhzLysyNFFhUTREdEMza1pPWUYxNERhUUlEQVFBQm8xQXdUakFkQmdOVkhRNEVGZ1FVWGdSYVExaUEKUWt0ZXBwQ3VJekYyRlQxamNaNHdId1lEVlIwakJCZ3dGb0FVWGdSYVExaUFRa3RlcHBDdUl6RjJGVDFqY1o0dwpEQVlEVlIwVEJBVXdBd0VCL3pBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUhiOUkyQ0RqWDBxRVFCMTUxUkh2CnFGYUFXd2dLWjNrOW1PN24vSFc4ZzRaVnNvYmZjRDJabk0xbHV1cy9CTmVjbTBIS0pHMkt4ZEFIZUFsU0M3NXEKVEVzZXJwdEhCOS95ekZhbGtIS0VZdlpYeVdhMTVBZFpGczY2bGxvanpKZ3Y3YXhhakQ0aTVsa1ZWUHpKaDZXZgplcnlsazBQeXN2ZStpVkorUDR6U3B1RFVsd1c5eW1MdVl0MUpGK3RsOGN3N2F6OUYxZ2tKeFZ3a0tYeUl5Z3lQCnFWNjlpUlV2dVN1ejlIc2gwN3JVQWRWdDJwVS9yUkNPTGpzMjhqYVRtVkl4OHNoTU1GWFFZM3dHMFhzYkNaVnMKaGtCM3lXWWVYSlFCTFZKeHEyOTJUWUEwNkc1M1pHcVRlVUx5UXEzQTcyVStGaVYvTFZ6L0JYd0RLOXhKMDRrTQpSQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  metadata:
    annotations:
      strimzi.io/ca-cert-generation: "0"
    labels:
      strimzi.io/cluster: backend-eventstore
      strimzi.io/kind: Kafka
    name: backend-eventstore-cluster-ca-cert
    namespace: {{ENV.COMMON.NAMESPACE|mandatory}}
  type: Opaque
- apiVersion: v1
  kind: Secret
  data:
    backend-eventstore-zookeeper-0.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVVakNDQXpxZ0F3SUJBZ0lKQU4yZGl2M2dJa281TUEwR0NTcUdTSWIzRFFFQkN3VUFNQzB4RXpBUkJnTlYKQkFvTUNtbHZMbk4wY21sdGVta3hGakFVQmdOVkJBTU1EV05zZFhOMFpYSXRZMkVnZGpBd0hoY05NVGt3TmpJMApNakF5TXpVMldoY05NakF3TmpJek1qQXlNelUyV2pBOE1STXdFUVlEVlFRS0RBcHBieTV6ZEhKcGJYcHBNU1V3Ckl3WURWUVFEREJ4aVlXTnJaVzVrTFdWMlpXNTBjM1J2Y21VdGVtOXZhMlZsY0dWeU1JSUJJakFOQmdrcWhraUcKOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTNoME1iNkVKaThmQU5yYlZjVWFoS3Bjb05EcThTam96T1JiSAplbEdobGlRRGVzWU9RRXVVWDJRbWwwY2ZPMU00WHRQOExZTjRDNXVGWVdYb21PL1M4TlNEMWFOUlVJNGE0ZTh5CjJVcFpCTGtJTE5Tczl0dW44TTMrTUNRYVl3ZWtRN1RJeWVRQm52QmpsWXN6VEhFWDNNdlJLZDVjdXgvckdiZmMKMXVEdThvWjc5K0gyWVBiS0FxMFdTWXBaRGlIeDRWZFRxZjl3dTlNbFp6ZmpVMUdzOWVDNldaNEJpZ3NFSUVSdQo1ZS9jUmdzaDRwZHFyWXBWb3BRTkJ3YmZBSXBBWG9xNXJDbXk2YnV4Q1c1bkdnMk9VMFlPa25rRzgzUnVwdVNSCjQyMHl3MkZJbEpVT3MxODgrZUt5cVNmbW1JaDZKUDRuZ29kREFUT0hjV0FTcWY5M053SURBUUFCbzRJQlpEQ0MKQVdBd2dnRmNCZ05WSFJFRWdnRlRNSUlCVDRKblltRmphMlZ1WkMxbGRtVnVkSE4wYjNKbExYcHZiMnRsWlhCbApjaTB3TG1KaFkydGxibVF0WlhabGJuUnpkRzl5WlMxNmIyOXJaV1Z3WlhJdGJtOWtaWE11WkdaeWIyVm9iR2t0CmIzQmxibVJxTFdSbGRpNXpkbU11WTJ4MWMzUmxjaTVzYjJOaGJJSTdZbUZqYTJWdVpDMWxkbVZ1ZEhOMGIzSmwKTFhwdmIydGxaWEJsY2kxamJHbGxiblF1WkdaeWIyVm9iR2t0YjNCbGJtUnFMV1JsZGk1emRtT0NTV0poWTJ0bApibVF0WlhabGJuUnpkRzl5WlMxNmIyOXJaV1Z3WlhJdFkyeHBaVzUwTG1SbWNtOWxhR3hwTFc5d1pXNWthaTFrClpYWXVjM1pqTG1Oc2RYTjBaWEl1Ykc5allXeUNJMkpoWTJ0bGJtUXRaWFpsYm5SemRHOXlaUzE2YjI5clpXVncKWlhJdFkyeHBaVzUwZ2pkaVlXTnJaVzVrTFdWMlpXNTBjM1J2Y21VdGVtOXZhMlZsY0dWeUxXTnNhV1Z1ZEM1awpabkp2Wldoc2FTMXZjR1Z1WkdvdFpHVjJNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJSd2lTNUR3aDhJWEJCCjVvY0xTdy9iYXJzRlNmNzlJYnNPQjFNcUVPbStkTVltZFBsTzlmVnVNdHZiVUVnRm0ySmx1VkFmWkQrNWMvYlUKTERGRldXajFIQnY0YzlEYVp0alQyc0w5YnZuSm44MjdPZFJ6TUpvSEx6ODk4dFMxTXh4UUFYbS9yMS80dVlDSgphRG5rRGFnekgxeTN2SmFka1QwZVdxaldoR0ErQmFoYTc1dVdtdUtkZ1hBdW9BQzk4dWFyNTFuNU9Lb1ZhcFBnCmlKYzN2aEE2VWdLczY2VkZmM2d5RGltb0liak1IUVhLbFRYODBYdlhpTWZ0UnNXM2hNL0RMQ0ZHMVAwTXJvT2oKa1BqNTYrb2tRTk9vZmNCZ1g5alYzVDIyL2lEUWMvOFJ3VEQydEIrNnZkUURwL0ltVXhiZ1FLZzh0RjMzMzg0QgpBZGZxbkMvOAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    backend-eventstore-zookeeper-0.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRRGVIUXh2b1FtTHg4QTIKdHRWeFJxRXFseWcwT3J4S09qTTVGc2Q2VWFHV0pBTjZ4ZzVBUzVSZlpDYVhSeDg3VXpoZTAvd3RnM2dMbTRWaApaZWlZNzlMdzFJUFZvMUZRamhyaDd6TFpTbGtFdVFnczFLejIyNmZ3emY0d0pCcGpCNlJEdE1qSjVBR2U4R09WCml6Tk1jUmZjeTlFcDNseTdIK3NadDl6VzRPN3lobnYzNGZaZzlzb0NyUlpKaWxrT0lmSGhWMU9wLzNDNzB5Vm4KTitOVFVhejE0THBabmdHS0N3UWdSRzdsNzl4R0N5SGlsMnF0aWxXaWxBMEhCdDhBaWtCZWlybXNLYkxwdTdFSgpibWNhRFk1VFJnNlNlUWJ6ZEc2bTVKSGpiVExEWVVpVWxRNnpYeno1NHJLcEorYVlpSG9rL2llQ2gwTUJNNGR4CllCS3AvM2MzQWdNQkFBRUNnZ0VBYi9RQ1ZhMjh5d2pHMkkwMWJtQWtVZnhZbG1MWWp5MWdyakRPSU5oT2N3ZjUKL1FNaEljVTJweElxNVd0QzBic3ptWkNOOWo3aTNpN29mdHhIN2ZaTHczbktiWDloT0JJNGVKTUJkVWFsTWQwMQp3cXI3OTMxbDI5bG9lc2xueDJ5Tm5sYmNNZTdMNWxuU1NBa2V0VFAzekNHcmJzZ1d3M2JtSUZOdGE1MTZzeUNuCmtvSWhhVGtIZnFpdnlKcjFwU2ZRaDNQcTRoaFZPUHFSWXRpQ2dodDRldHFuckFqVUFPMDV3eVRsSENraUZQeTUKbXZPa2x0cCtRc1Npa2NGVVdybnZwTjAzM0hnTDdaUXBybjhLL2UvUlF6eUFQK0E3R1IwejdKWDZXUFNXaVAzNgpRNjNpZDlMZE0vNXdJOGpzalFRT0FHUjRTaTZJUy9UNnZkUmVCcmxqUVFLQmdRRDEzVURaQStiR1dHODhueDBDCnlhNUVBV0dNSlM5UnQvbVJ5OC9zWGx6VW00Q2xNTzRIeWlUSWFzaTFRZWdxYi9OZHVWME1HZUJnM1ppK1JESUcKRkZ1NzU4UnpSTk1sWGNxTm1PMGhlTVJ3MzhmMFdQQjdHSU5oclU3ekZ5NEc2dXZKQTIvTEhQakcwM1pzQTIzRgpiRWFYMnZnWmF4eWMwamgrOE1IRDRCd0o0UUtCZ1FEblJTT3pMRFJKSXdsblhIMDA2VWVEOEQ4cTZRUThmRGJOCjNmWmhaMWdSd09PVDN2bVZTR016bTRRcnBlTmNrbUJZdGxQQThRYUE4RVBueVQzSGRqZ254UlJ2STZEcXk2TVcKZ2ZXdm85b3V0Nk45Mklob01oUU1jUnhiK3JjWWxTM0RrUTBwTWFCdUZXZzR4Z0V0YVFyVVBEbXQyVjE0Z285eAoyT2RQNzFVVUZ3S0JnUUNCelpYMi9RQlJwMDdUQ280ZWNxdjJhMlE4d1VVQ044Y2pHaDlrQTAydlVZblJyTXQrCmdWSjZIU1pweTZudS9idld0NDVRWFRrQTZ2MUJObS9TbGR6NGo1dy8zdzQ2cEJIVVAvQ3h3eml5L3ZKcUpxcVAKMHBsS2NGMUdLZTY2NkR3am5CVGhmeUk0bGx2bkdzaFJlcUNxZTRpUW91UXdSeXhjbUc4MElwV3JBUUtCZ1FEWQpuekJEUVdKd0p2dEY3Nkh2ajVwSEFSK0p4OTBKOHFjNnlXOWY2UGJiR2p1UVpFaVBCZEMxcEROMjF0bFIrbUY0CmRyK1lkNnJKMTBNanRxSEJWUUJnYi84bDRzOTFYZXlTeG9Ra1VtdXBXcVV1MlVWYm81eVgwdExuYkwxWHIxUEEKWFB0ZzNIVVM1OFpKZDEzZTlRY0pxS2UyS1dXZDNWMFRIRUg5NDRWalhRS0JnRXJPNDRNNFBWS0tOU1hNTTlQRgpQVlg2UWJpTkNGOTlhNGxSdmRDbWZKdERlRGtwOVdQZ1lLSUdsV05LY1FUcmd3WjcrUlFmWGRFd1NJVHU0V3U4CkRBQmI1UWlRV2t5eUI0aU1QRmd0SExCNUhhZ3NHalEwbFp6cHVOem5LWEVqMWxEU0RkcEF4SitIUWFlZUFFYjAKTEQwb0tmZ3N4Unc3dWhwM1R1UkdjVnNwCi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
  metadata:
    creationTimestamp: 2019-06-24T20:23:56Z
    labels:
      strimzi.io/cluster: backend-eventstore
      strimzi.io/kind: Kafka
    name: backend-eventstore-zookeeper-nodes
    namespace: {{ENV.COMMON.NAMESPACE|mandatory}}
    ownerReferences:
    - apiVersion: kafka.strimzi.io/v1alpha1
      blockOwnerDeletion: false
      controller: false
      kind: Kafka
      name: backend-eventstore
      uid: fd859d40-96bd-11e9-a2a2-566fafb8001c
    resourceVersion: "16483768"
    selfLink: /api/v1/namespaces/{{ENV.COMMON.NAMESPACE|mandatory}}/secrets/backend-eventstore-zookeeper-nodes
    uid: fde68e5b-96bd-11e9-82e5-566fafb8001b
  type: Opaque
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    creationTimestamp: 2019-06-24T20:23:56Z
    generation: 1
    labels:
      strimzi.io/cluster: backend-eventstore
      strimzi.io/kind: Kafka
      strimzi.io/name: backend-eventstore-zookeeper
    name: backend-eventstore-zookeeper
    namespace: {{ENV.COMMON.NAMESPACE|mandatory}}
  spec:
    podManagementPolicy: Parallel
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        strimzi.io/cluster: backend-eventstore
        strimzi.io/kind: Kafka
        strimzi.io/name: backend-eventstore-zookeeper
    serviceName: backend-eventstore-zookeeper-nodes
    template:
      metadata:
        annotations:
          strimzi.io/cluster-ca-cert-generation: "0"
          strimzi.io/generation: "0"
        creationTimestamp: null
        labels:
          strimzi.io/cluster: backend-eventstore
          strimzi.io/kind: Kafka
          strimzi.io/name: backend-eventstore-zookeeper
        name: backend-eventstore-zookeeper
      spec:
        containers:
        - env:
          - name: ZOOKEEPER_NODE_COUNT
            value: "1"
          - name: ZOOKEEPER_METRICS_ENABLED
            value: "false"
          - name: STRIMZI_KAFKA_GC_LOG_ENABLED
            value: "true"
          - name: KAFKA_HEAP_OPTS
            value: -Xms128M
          - name: ZOOKEEPER_CONFIGURATION
            value: |
              autopurge.purgeInterval=1
              timeTick=2000
              initLimit=5
              syncLimit=2
          image: registry.access.redhat.com/amq7/amq-streams-zookeeper:1.1.0-kafka-2.1.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /opt/kafka/zookeeper_healthcheck.sh
            failureThreshold: 3
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: zookeeper
          readinessProbe:
            exec:
              command:
              - /opt/kafka/zookeeper_healthcheck.sh
            failureThreshold: 3
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/zookeeper
            name: data
          - mountPath: /opt/kafka/custom-config/
            name: zookeeper-metrics-and-logging
        - env:
          - name: TLS_SIDECAR_LOG_LEVEL
            value: notice
          - name: ZOOKEEPER_NODE_COUNT
            value: "1"
          image: registry.access.redhat.com/amq7/amq-streams-zookeeper-stunnel:1.1.0
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                - /opt/stunnel/stunnel_pre_stop.sh
                - "30"
          livenessProbe:
            exec:
              command:
              - /opt/stunnel/stunnel_healthcheck.sh
              - "2181"
            failureThreshold: 3
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: tls-sidecar
          ports:
          - containerPort: 2888
            name: clustering
            protocol: TCP
          - containerPort: 3888
            name: leader-election
            protocol: TCP
          - containerPort: 2181
            name: clients
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /opt/stunnel/stunnel_healthcheck.sh
              - "2181"
            failureThreshold: 3
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              memory: 80Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/tls-sidecar/zookeeper-nodes/
            name: zookeeper-nodes
          - mountPath: /etc/tls-sidecar/cluster-ca-certs/
            name: cluster-ca-certs
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: backend-eventstore-zookeeper-config
          name: zookeeper-metrics-and-logging
        - name: zookeeper-nodes
          secret:
            defaultMode: 288
            secretName: backend-eventstore-zookeeper-nodes
        - name: cluster-ca-certs
          secret:
            defaultMode: 288
            secretName: backend-eventstore-cluster-ca-cert
    updateStrategy:
      type: OnDelete
    volumeClaimTemplates:
    - metadata:
        creationTimestamp: null
        name: data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
      status:
        phase: Pending
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
    labels:
      strimzi.io/cluster: backend-eventstore
      strimzi.io/kind: Kafka
      strimzi.io/name: backend-eventstore-zookeeper-nodes
    name: backend-eventstore-zookeeper-nodes
    namespace: {{ENV.COMMON.NAMESPACE|mandatory}}
  spec:
    clusterIP: None
    ports:
    - name: clients
      port: 2181
      protocol: TCP
      targetPort: 2181
    - name: clustering
      port: 2888
      protocol: TCP
      targetPort: 2888
    - name: leader-election
      port: 3888
      protocol: TCP
      targetPort: 3888
    selector:
      strimzi.io/cluster: backend-eventstore
      strimzi.io/kind: Kafka
      strimzi.io/name: backend-eventstore-zookeeper
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      prometheus.io/path: /metrics
      prometheus.io/port: "9404"
      prometheus.io/scrape: "true"
    labels:
      strimzi.io/cluster: backend-eventstore
      strimzi.io/kind: Kafka
      strimzi.io/name: backend-eventstore-zookeeper-client
    name: backend-eventstore-zookeeper-client
    namespace: {{ENV.COMMON.NAMESPACE|mandatory}}
  spec:
    ports:
    - name: clients
      port: 2181
      protocol: TCP
      targetPort: 2181
    selector:
      strimzi.io/cluster: backend-eventstore
      strimzi.io/kind: Kafka
      strimzi.io/name: backend-eventstore-zookeeper
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
