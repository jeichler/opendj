---
- name: Install backend-eventstore
  gather_facts: false
  hosts: localhost
  vars_files:
    - ../../../install/openshift/vars_secrets.yml
    - ../../../install/openshift/vars_common.yml
    - ../../../install/openshift/vars_env_{{ STAGE }}.yml
  tasks:
    - name: "Combine env facts"
      set_fact:
        ENV: "{{ common | combine( specific, recursive=True) }}"

    - name: Deploy Kafka via Operator
      when: ENV.BACKEND_EVENTSTORE.KAFKA.OPERATOR_AVAILABLE|bool
      k8s:
        state: present
        wait: true
        definition:
          apiVersion: kafka.strimzi.io/v1alpha1
          kind: Kafka
          metadata:
            name: backend-eventstore
            namespace: "{{ENV.COMMON.NAMESPACE|mandatory}}"
          spec:
            kafka:
              version: 2.1.1
#              replicas: "{{ENV.BACKEND_EVENTSTORE.KAFKA.NUM_BROKERS | default('1') | int }}"
              replicas: 1
              listeners:
                plain: {}
                tls: {}
              config:
#                offsets.topic.replication.factor: "{{ENV.BACKEND_EVENTSTORE.KAFKA.NUM_BROKERS | default('1')}}"
                offsets.topic.replication.factor: 1
                transaction.state.log.replication.factor: 1
                transaction.state.log.min.isr: 1
                log.message.format.version: "2.1"
              storage:
                type: persistent-claim
                size: 1Gi
                deleteClaim: true
            zookeeper:
              replicas: 1
              storage:
                type: persistent-claim
                size: 1Gi
                deleteClaim: true

# Ugly as hell, but i dont care.
# Need to ignore errors as no idempotency here:
# TODO: Use Better way described here:
# https://access.redhat.com/solutions/4241041
    - name: Deploy Kafka via ugly workaround (errors can be ignored)
      block:
        - name: Deploy zookepper
          command: oc create --namespace {{ENV.COMMON.NAMESPACE}} -f -
          args:
            stdin: "{{ lookup('template', 'noOperator_zookeeper.yml') }}"
          ignore_errors: yes
        - name: Deploy broker
          command: oc create --namespace {{ENV.COMMON.NAMESPACE}} -f -
          args:
            stdin: "{{ lookup('template', 'noOperator_broker.yml') }}"
          ignore_errors: yes
      when: not ENV.BACKEND_EVENTSTORE.KAFKA.OPERATOR_AVAILABLE|bool

    - name: Wait for broker pod to be online
      shell: oc get pods --namespace {{ENV.COMMON.NAMESPACE}} | grep backend-eventstore-kafka-0 | grep Running
      register: getpods
      until: "'2/2' in getpods.stdout"
      retries: 120
      delay: 2
      changed_when: false
