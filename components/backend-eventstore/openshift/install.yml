---
- name: Install backend-eventstore
  gather_facts: false
  hosts: localhost
  vars_files:
    - ../../../install/openshift/vars_secrets.yml
    - ../../../install/openshift/vars_common.yml
    - ../../../install/openshift/vars_env_{{ STAGE }}.yml
  tasks:
    - name: "Combine env facts"
      set_fact:
        ENV: "{{ common | combine( specific, recursive=True) }}"

    - name: Skip deployment if not needed
      meta: end_play
      when: not ENV.BACKEND_EVENTSTORE.DEPLOY

    - name: Deploy Kafka via Operator
      k8s:
        state: present
        wait: true
        definition:
          apiVersion: kafka.strimzi.io/v1beta1
          kind: Kafka
          metadata:
            name: backend-eventstore
            namespace: "{{ENV.COMMON.NAMESPACE|mandatory}}"
            labels:
              app.kubernetes.io/part-of: backend
              app: backend
          spec:
            kafka:
              version: 2.6.0
              replicas: 1
              listeners:
                plain: {}
                tls: {}
              config:
#                offsets.topic.replication.factor: "{{ (ENV.BACKEND_EVENTSTORE.KAFKA.NUM_BROKERS | default('1')) | int}}"
                offsets.topic.replication.factor: 1
                transaction.state.log.replication.factor: 1
                transaction.state.log.min.isr: 1
                log.message.format.version: "2.6"
              storage:
                type: persistent-claim
                size: 1Gi
                class: "{{ ENV.COMMON.STORAGE_CLASS_FILE}}"
                deleteClaim: true
              template:
                statefulset:
                  metadata:
                    labels:
                      app.kubernetes.io/part-of: backend
                      app.kubernetes.io/name: backend
                      app: backend
            zookeeper:
              replicas: 1
              storage:
                type: persistent-claim
                size: 1Gi
                class: "{{ ENV.COMMON.STORAGE_CLASS_FILE}}"
                deleteClaim: true
              template:
                statefulset:
                  metadata:
                    labels:
                      app.kubernetes.io/part-of: backend
                      app.kubernetes.io/name: backend
                      app: backend
            entityOperator:
              topicOperator: {}

    - name: Wait for broker pod to be online
      shell: oc get pods --namespace {{ENV.COMMON.NAMESPACE}} | grep backend-eventstore-kafka-0 | grep Running
      register: getpods
      until: "'1/1' in getpods.stdout"
      retries: 120
      delay: 2
      changed_when: false
