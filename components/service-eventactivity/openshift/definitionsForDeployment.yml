- kind: DeploymentConfig
  apiVersion: apps.openshift.io/v1
  metadata:
    annotations:
      template.alpha.openshift.io/wait-for-ready: 'true'
    labels:
      app: service-eventactivity
      template: opendj-nodejs-service-eventactivity
    name: service-eventactivity
    namespace: "{{ENV.COMMON.NAMESPACE|mandatory}}"
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      name: service-eventactivity
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 60
      resources: {}
      type: Rolling
    template:
      metadata:
        labels:
          name: service-eventactivity
        name: service-eventactivity
      spec:
        containers:
          - env:
              - name: quarkus_log_console_level
                value: "{{ENV.SERVICE_EVENTACTIVITY.LOG_LEVEL | default('ALL')}}"
              - name: "mp_messaging_outgoing_event_activity_bootstrap_servers"
                value: "{{ENV.BACKEND_EVENTSTORE.KAFKA.HOST}}"
            imagePullPolicy: IfNotPresent
            name: service-eventactivity-minimal
            resources:
              limits:
                cpu: 1000m
                memory: 80Mi
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
            - service-eventactivity-minimal
          from:
            kind: ImageStreamTag
            name: 'service-eventactivity-minimal:{{ENV.COMMON.CONTAINER_IMAGE_TAG}}'
            namespace: "{{ENV.COMMON.CONTAINER_IMAGE_FROM_NAMESPACE | mandatory}}"
        type: ImageChange
      - type: ConfigChange

- kind: Service
  apiVersion: v1
  metadata:
    labels:
      app: service-eventactivity
    name: service-eventactivity
    namespace: "{{ENV.COMMON.NAMESPACE|mandatory}}"
  spec:
    ports:
      - name: web
        port: 8080
        protocol: TCP
        targetPort: 8080
    selector:
      name: service-eventactivity
    sessionAffinity: None
    type: ClusterIP
