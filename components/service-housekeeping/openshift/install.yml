---
- name: Install service-housekeeping
  gather_facts: false
  hosts: localhost
  vars_files:
    - ../../../install/openshift/vars_secrets.yml
    - ../../../install/openshift/vars_common.yml
    - ../../../install/openshift/vars_env_{{ STAGE }}.yml
  tasks:
    - name: "Combine env facts"
      tags: always
      set_fact:
        ENV: "{{ common | combine( specific, recursive=True) }}"

    - name: Create PVC for event export
      k8s:
        state: present
        wait: true
        definition:
          kind: PersistentVolumeClaim
          apiVersion: v1
          metadata:
            name: service-housekeeping-event-export
            namespace: "{{ENV.COMMON.NAMESPACE|mandatory}}"
          spec:
            accessModes:
            - ReadWriteOnce
            resources:
              requests:
                storage: 1Gi
    - name: Create ImageStreamTag
      when: ENV.COMMON.CONTAINER_IMAGE_BUILD
      k8s:
        state: present
        wait: true
        definition:
          kind: ImageStream
          apiVersion: image.openshift.io/v1
          metadata:
            labels:
              app: service-housekeeping
            name: service-housekeeping
            namespace: "{{ENV.COMMON.NAMESPACE|mandatory}}"
          spec:
            lookupPolicy:
              local: false
    - name: Create BuildConfig
      when: ENV.COMMON.CONTAINER_IMAGE_BUILD
      k8s:
        state: present
        wait: true
        definition:
          kind: BuildConfig
          apiVersion: build.openshift.io/v1
          metadata:
            labels:
              app: service-housekeeping
            name: service-housekeeping
            namespace: "{{ENV.COMMON.NAMESPACE|mandatory}}"
          spec:
            failedBuildsHistoryLimit: 5
            nodeSelector: null
            output:
              to:
                kind: ImageStreamTag
                name: service-housekeeping:latest
            postCommit: {}
            resources: {}
            runPolicy: Serial
            source:
              contextDir: components/service-housekeeping
              git:
                ref: "{{ENV.COMMON.GIT.REF | default('master')}}"
                uri: https://github.com/opendj/opendj.git
              type: Git
            strategy:
              sourceStrategy:
                env:
                - name: NPM_MIRROR
                from:
                  kind: ImageStreamTag
                  name: nodejs:10
                  namespace: openshift
              type: Source
            successfulBuildsHistoryLimit: 2
            triggers:
            - imageChange:
              type: ImageChange
            - type: ConfigChange
            - github:
                secret: 1qTuy4R21UDqOMqivTxpwrUN0brGdIONGdyBeCxX
              type: GitHub
            - generic:
                secret: rEVLkWDcrlBoPuionusPj0CL4A1H1DsFCMYPCdSw
              type: Generic
    - name: Create DeploymentConfig
      k8s:
        state: present
        wait: true
        definition:
          kind: DeploymentConfig
          apiVersion: apps.openshift.io/v1
          metadata:
            annotations:
              template.alpha.openshift.io/wait-for-ready: 'true'
            labels:
              app: service-housekeeping
              template: opendj-nodejs-service-housekeeping
            name: service-housekeeping
            namespace: "{{ENV.COMMON.NAMESPACE|mandatory}}"
          spec:
            replicas: 1
            revisionHistoryLimit: 10
            selector:
              name: service-housekeeping
            strategy:
              activeDeadlineSeconds: 21600
              recreateParams:
                timeoutSeconds: 60
              resources: {}
              type: Recreate
            template:
              metadata:
                labels:
                  name: service-housekeeping
                name: service-housekeeping
              spec:
                containers:
                  - env:
                      - name: LOG_LEVEL
                        value: "{{ENV.SERVICE_HOUSEKEEPING.LOG_LEVEL | default('info')}}"
                      - name: EVENT_STORAGE
                        value: "{{ENV.SERVICE_HOUSEKEEPING.EVENT_STORAGE | default('/data')}}" 
                      - name: CRONTAB
                        value: "{{ENV.SERVICE_HOUSEKEEPING.CRONTAB | default('0,30 * * * * *')}}" 
                      - name: DATAGRID_URL
                        value: "{{ENV.BACKEND_DATAGRID.URL | default('backend-datagrid:11222')}}" 
                    imagePullPolicy: IfNotPresent
                    name: service-housekeeping
                    resources:
                      limits:
                        cpu: 100m
                        memory: 80Mi
                    terminationMessagePath: /dev/termination-log
                    terminationMessagePolicy: File
                    volumeMounts:
                      - mountPath: /data
                        name: volume-data
                dnsPolicy: ClusterFirst
                restartPolicy: Always
                schedulerName: default-scheduler
                securityContext: {}
                terminationGracePeriodSeconds: 30
                volumes:
                  - name: volume-data
                    persistentVolumeClaim:
                      claimName: service-housekeeping-event-export
            test: false
            triggers:
              - imageChangeParams:
                  automatic: true
                  containerNames:
                    - service-housekeeping
                  from:
                    kind: ImageStreamTag
                    name: 'service-housekeeping:{{ENV.COMMON.CONTAINER_IMAGE_TAG}}'
                    namespace: "{{ENV.COMMON.CONTAINER_IMAGE_FROM_NAMESPACE | mandatory}}"
                type: ImageChange
              - type: ConfigChange
